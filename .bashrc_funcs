#
# ~/.bashrc_funcs
#

function get-splashed {
    # screenfetch opts:
    # distro host kernel uptime pkgs shell res de wm wmtheme gtk disk cpu gpu mem
    local opts
    if [[ -z "$1" ]]; then
        opts='-d -pkgs,res,de,wm,wmtheme,gtk'
    elif [[ "$1" == 'all' ]]; then
        opts=''
    else
        opts="$@"
    fi
    # portrait || normal
    [[ $COLUMNS -le 100 ]] && screenfetch $opts -p || screenfetch $opts
}

# split plex browser
function plex {
    local plexbrowser
    if [[ -n "$1" ]]; then
        plexbrowser="$1"
    elif [[ -n "$BROWSER" ]]; then
        plexbrowser="$BROWSER"
    else
        plexbrowser='firefox'
    fi
    nohup mullvad-exclude $plexbrowser &
}

# mullvad split-tunneled processes
function splitted {
    # pid list | skip first line | ps: pid -> command
    local processlist="$(mullvad split-tunnel list | awk 'NR>1' | xargs -r -I _ ps -q _ -o comm=)"
    [[ -z "$processlist" ]] && echo "no excluded processes" && return

    printf '%s excluded processes:\n' $(wc -l <<< "$processlist") # linecount
    if [[ "$1" == 'all' ]]; then
        sort <<< "$processlist"
    else
        sort -u <<< "$processlist"
    fi
}

# find and open rc/config files 
function editrc {
    local pattern
    case "$1" in
          bash) pattern='.*(\bbash|bash\b).*';;
        bashrc) pattern='.*(\bbashrc|bashrc\b).*';;
            -p) [[ -n "$2" ]] && pattern="$2" || read -r -p 'pattern=' pattern;;
             *) pattern='.*(\brc|rc\b|_rc|rc_).*'
    esac
    local rcfiles="$(find ~/ -maxdepth 1 -regextype egrep -iregex "$pattern" -printf '%f\n')"
    local rc REPLY IFS=$'\n'
    select rc in $(sort <<< "$rcfiles"); do break; done
    ${EDITOR:-'vi'} ~/"$rc"
}

